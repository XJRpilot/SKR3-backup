#E3MN_SKR 3_EBB42_U2C
#14/08/2024


#     MOBO                          Katapult Configuration v0.0.1-64-g3e23332
#     Micro-controller Architecture (STMicroelectronics STM32)  --->
#     Processor model (STM32H723)  --->
#     Build Katapult deployment application (128KiB bootloader (SKR SE BX v2.0))  --->
#     Clock Reference (25 MHz crystal)  --->
#     Communication interface (USB (on PA11/PA12))  --->
#     Application start offset (128KiB offset)  --->
#     USB ids  --->
# ()  GPIO pins to set on bootloader entry
# [*] Support bootloader entry on rapid double click of reset button
# [ ] Enable bootloader entry on button (or gpio) state
# [ ] Enable Status LED

#     MOBO                                Klipper Firmware Configuration
# [*] Enable extra low-level configuration options
#     Micro-controller Architecture (STMicroelectronics STM32)  --->
#     Processor model (STM32H723)  --->
#     Bootloader offset (128KiB bootloader)  --->
#     Clock Reference (25 MHz crystal)  --->
#     Communication interface (USB (on PA11/PA12))  --->
# ()  GPIO pins to set at micro-controller startup



#     EBB42                          Katapult Configuration v0.0.1-64-g3e23332
#     Micro-controller Architecture (STMicroelectronics STM32)  --->
#     Processor model (STM32G0B1)  --->
#     Build Katapult deployment application (8KiB bootloader)  --->
#     Clock Reference (8 MHz crystal)  --->
#     Communication interface (CAN bus (on PB0/PB1))  --->
#     Application start offset (8KiB offset)  --->
# (1000000) CAN bus speed
# ()  GPIO pins to set on bootloader entry
# [*] Support bootloader entry on rapid double click of reset button
# [ ] Enable bootloader entry on button (or gpio) state
# [*] Enable Status LED
# (PA13)  Status LED GPIO Pin


#      EBB42                               Klipper Firmware Configuration
# [*] Enable extra low-level configuration options
#     Micro-controller Architecture (STMicroelectronics STM32)  --->
#     Processor model (STM32G0B1)  --->
#     Bootloader offset (8KiB bootloader)  --->
#     Clock Reference (8 MHz crystal)  --->
#     Communication interface (CAN bus (on PB0/PB1))  --->
# (1000000) CAN bus speed
# ()  GPIO pins to set at micro-controller startup

#     RPi                                Klipper Firmware Configuration
# [*] Enable extra low-level configuration options
#     Micro-controller Architecture (Linux process)  --->
# ()  GPIO pins to set at micro-controller startup (NEW)


# This file contains common pin mappings for the BigTreeTech SKR 3.
# To use this config, the firmware should be compiled for the
# STM32H743 with a "128KiB bootloader".

# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_18001C001651313238353730-if00
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.1:1.0
#serial: /dev/ttyAMA0
restart_method: command

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_320035000E50425539393020-if00
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0
canbus_uuid: a732400db788

[mcu rpi]
serial: /tmp/klipper_host_mcu

[include mainsail.cfg]
[include essentials.cfg]

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 1500
max_z_velocity: 10
max_z_accel: 500
square_corner_velocity: 5.0

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[temperature_sensor BTT_SKR3]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

[temperature_sensor BTT_EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 10
max_temp: 100

[temperature_sensor raspi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[neopixel neo]
pin: PE6
chain_count: 14
color_order: GRB

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

[bltouch]
#sensor_pin: ^PC13
#control_pin: PE5
sensor_pin: ^EBBCan:PB8
control_pin: EBBCan:PB9
x_offset: -40
y_offset: -15
samples: 2
z_offset: 2.370
#speed:
#z_offset: 0                                                          #
pin_up_touch_mode_reports_triggered: False
probe_with_touch_mode: true
stow_on_each_sample: false

[safe_z_home]
home_xy_position: 190, 165 # Change coordinates to the center of your print bed
speed: 50
z_hop: 5                 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
mesh_min: 23, 25
mesh_max: 260, 280
algorithm: bicubic
probe_count: 6,6                 
horizontal_move_z: 5
speed: 50

[filament_switch_sensor switch_sensor]
switch_pin: ^PA0
#switch_pin: EBBCan:PB4
pause_on_runout: true
runout_gcode:
     G1 E10 F5000
     G1 E-100 F5000
event_delay: 3.0
pause_delay: 0.5

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3

###########################################################################################################################
#######################################               STEPPERS                   ##########################################
###########################################################################################################################

[stepper_x]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -20
position_min: -20
position_max: 300
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PD5
run_current: 0.580
interpolate: false                          #For best positional accuracy consider using spreadCycle mode and disable interpolation (set interpolate: False
stealthchop_threshold: 99999                    #In general, spreadCycle mode provides greater torque and greater positional accuracy than stealthChop mode:0
                                            #stealthchop_threshold: 999999 for quieter operatiON    
                                                                                    
[stepper_y]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC3
position_endstop: 0
position_max: 200
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PD0
run_current: 0.580
interpolate: false
stealthchop_threshold: 999999

[stepper_z]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PE0
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PC2
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 325
homing_speed: 20
second_homing_speed: 1
homing_retract_dist: 2.0

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.50
interpolate: false
stealthchop_threshold: 999999

# [stepper_z1]
# step_pin: PD15
# dir_pin: !PD14
# enable_pin: !PC7
# microsteps: 16
# rotation_distance: 4

# [tmc2209 stepper_z1]
# uart_pin: PC6
# run_current: 0.50
# interpolate: false
# stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin:EBBCan: PA15   # PD12
#tx_pin: EBBCan: PB1
run_current: 0.700
# diag_pin:
# uart_address: 00
sense_resistor: 0.11
interpolate: false
stealthchop_threshold: 999999

[extruder]
step_pin: EBBCan: PD0    #PD11
dir_pin: EBBCan: PD1    #!PD10
enable_pin: !EBBCan: PD2   #!PD13 
microsteps: 16
rotation_distance: 7.5
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 5
#instantaneous_corner_velocity: 1.000
max_extrude_only_distance: 1000.0
pressure_advance_smooth_time: 0.04
pressure_advance: 0.046

######################################################################################################################
#####################                   HEATERS AND FANS                 #############################################
######################################################################################################################


heater_pin: EBBCan: PB13   #PB3
sensor_type: MAX31865    #NTC 100K MGB18-104F39050L32           #EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA4    #PA2
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
min_temp: 0
max_temp: 530
# control = pid
# pid_kp = 17.316
# pid_ki = 1.079
# pid_kd = 69.481

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
# control = pid
# pid_kp = 73.628
# pid_ki = 1.180
# pid_kd = 1148.601
min_temp: 0
max_temp: 130

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

[heater_fan mcu_cooling_fan]
pin: PB5
heater: extruder
heater_temp: 50.0
fan_speed: 0.4

[heater_fan psu_cooling_fan]
pin: PB6
heater: heater_bed
heater_temp: 50.0
fan_speed: 1

[heater_fan mcu_cooling_fan]
pin: PB7
heater: extruder
heater_temp: 50.0
fan_speed: 0.4

# [temperature_fan MCU_fan]         #fan3
# pin: PB5
# max_power: 1.0
# shutdown_speed: 0
# kick_start_time: 0.5
# off_below: 0.2
# sensor_type: temperature_combined
# control: watermark
# min_temp:0
# max_temp:75
# target_temp: 55.0
# max_speed: 1.0
# min_speed: 0.2
# sensor_type: temperature_combined
# sensor_list: temperature_sensor raspi #, temperature_sensor BTT_E3V3_temp
# combination_method: mean
# maximum_deviation: 9999

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE9,  EXP1_7=PE11, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE8, EXP1_6=PE10, EXP1_8=PE12, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[input_shaper]
#shaper_type_x = mzv
#shaper_freq_x = 64.2
#shaper_type_y = 2hump_ei
#shaper_freq_y = 39.0

# [input_shaper]   
# shaper_type_x = mzv
# shaper_freq_x = 62.4
# shaper_type_y = mzv
# shaper_freq_y = 24.8     # Glass bed

# [input_shaper]    
# shaper_type_x = mzv
# shaper_freq_x = 62.4
# shaper_type_y = mzv
# shaper_freq_y = 26.4     #PEI bed

# [input_shaper]
# shaper_type_x = ei
# shaper_freq_x = 85.8      #new cooler
# shaper_type_y = mzv
# shaper_freq_y = 26.4

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.316
#*# pid_ki = 1.079
#*# pid_kd = 69.481
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.628
#*# pid_ki = 1.180
#*# pid_kd = 1148.601
#*#
#*# [bed_mesh current]
#*# version = 1
#*# points =
#*# 	  0.032500, -0.040000, -0.065000
#*# 	  0.072500, 0.062500, -0.023750
#*# 	  0.065000, 0.033750, -0.031250
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 126.55199999999999
#*# max_x = 173.432
#*# min_y = 128.86
#*# max_y = 171.14
#*#
#*# [bltouch]
#*# z_offset = 2.435
#*#
#*# [bed_mesh default ]
#*# version = 1
#*# points =
#*# 	-0.237500, -0.280000, -0.302500, -0.297500, -0.287500, -0.230000
#*# 	-0.277500, -0.292500, -0.312500, -0.300000, -0.280000, -0.210000
#*# 	-0.320000, -0.352500, -0.377500, -0.357500, -0.357500, -0.252500
#*# 	-0.285000, -0.317500, -0.332500, -0.302500, -0.312500, -0.240000
#*# 	-0.197500, -0.280000, -0.272500, -0.260000, -0.237500, -0.195000
#*# 	-0.185000, -0.242500, -0.262500, -0.237500, -0.250000, -0.185000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 23.0
#*# max_x = 260.0
#*# min_y = 25.0
#*# max_y = 280.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.032500, -0.040000, -0.065000
#*# 	  0.072500, 0.062500, -0.023750
#*# 	  0.065000, 0.033750, -0.031250
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 126.55199999999999
#*# max_x = 173.432
#*# min_y = 128.86
#*# max_y = 171.14
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 85.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 26.4
#*#
#*# [endstop_phase stepper_z]
#*# trigger_phase = 24/64
#*#
#*# [endstop_phase stepper_x]
#*# trigger_phase = 29/64
#*#
#*# [endstop_phase stepper_y]
#*# trigger_phase = 59/64